{
 "Resources": {
  "snowmans336023647": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketName": "snowman-s3"
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "snowman/snowman-s3/Resource"
   }
  },
  "LambdaRole3A44B857": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lamda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaRole"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/SecretsManagerReadWrite"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/CloudWatchFullAccess"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "snowman/LambdaRole/Resource"
   }
  },
  "LambdaRoleDefaultPolicy75625A82": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:DeleteObject*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging",
        "s3:Abort*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "snowmans336023647",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "snowmans336023647",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "LambdaRoleDefaultPolicy75625A82",
    "Roles": [
     {
      "Ref": "LambdaRole3A44B857"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "snowman/LambdaRole/DefaultPolicy/Resource"
   }
  },
  "snowmanlambda28B8C789": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-441058194263-us-east-1",
     "S3Key": "31511537595529ea552ee0b021ee530a98ff7986e4e97978dc57a2add9543705.zip"
    },
    "Environment": {
     "Variables": {
      "DEPLOYMENT_ENV": "sbx"
     }
    },
    "FunctionName": "snowman-lambda",
    "Handler": "app.handler",
    "Role": {
     "Fn::GetAtt": [
      "LambdaRole3A44B857",
      "Arn"
     ]
    },
    "Runtime": "python3.11",
    "Timeout": 900
   },
   "DependsOn": [
    "LambdaRoleDefaultPolicy75625A82",
    "LambdaRole3A44B857"
   ],
   "Metadata": {
    "aws:cdk:path": "snowman/snowman-lambda/Resource",
    "aws:asset:path": "asset.31511537595529ea552ee0b021ee530a98ff7986e4e97978dc57a2add9543705",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/zWMQQqDMBBFz9J9nGqlB6iFrkUPIGNM7dSYgJMgEnL3ErWr9z4P/g2KewH5BVfO5DBlmnoIrUM5CVy5C1xCqLyclBPPtzntQIWsoiCcITRWq9R31laT3NI8LAqNcz8ghJc30pE1qf09Ci47ZFaO4ZEQRaPY+kUqse/W4Uhm3O/PEEW9uY811xKKHPLLl4myxRtHs4Lm4A/qmdh52QAAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "snowman/CDKMetadata/Default"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}